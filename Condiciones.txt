Salidas Esperadas
Archivo CSV con estado de bacterias por paso.
Gráficas de crecimiento y resistencia.
Interfaz gráfica.
Uso obligatorio de control de versiones (20 commits mı́nimo).

Condiciones:

alimentar
    -estado: activa
    -nutrientes: + de 0 no + del total disponible
    ~consumo: entre 5 y 15

dividirse: 
    -estado: activa
    -energia: si alcanza las 50 unidades
    -

mutar: 
    -estado: activa
    -random mayor a 0.5


Preguntar:
    - las bacterias, biofilm se predefinen en el codigo (ejemplo)
    - Simulador
        Controla los pasos de simulación e inicializa los valores.
        Métodos: run(pasos), graficar crecimiento(), graficar resistencia().
    - Commits


Tips:
LISTO   - convertir matriz de objetos en matriz numérica
    - representar - 1.animation o 2.imagenes
    - la grilla es como estamos procesando (puede o no ser reflejo de la imagen)
LISTO    - listas predefinidas con atributos -> al azar 
    - csv coordenadas
    - lo que impacta en la matriz(ambiente) impacta en la colonia y viceversa
    - controlamos el objeto
LISTO    - primero = agregar bacterias al ambiente
LISTO    - ultimo = colonias como tal

-----------------------------------------------------
    Main --> Simulador PENDIENTE
    Simulador --> Colonia
    Colonia --> Bacteria
    Colonia --> Ambiente
    Ambiente --> Grilla[Numpy grilla]
-----------------------------------------------------

Clase Ambiente:
    grilla = matriz vacia
        def grilla_objetos = asocia bacterias a la grilla
            -> self.grilla[i, j] = Bacteria 

Clase Colonia:
    self.bacterias = [] -> lista de bacterias


Commits:
AVANCE 1
1. Importar bibliotecas, 
2. interfaz gráfica (ventana) 
3. clase Bacteria: métodos (probabilidades)
-----
AVANCE 2
4. clase Ambiente: crear bacterias random 
5. grilla objetos (np.empty)
6. grilla visual (np.zeros) estatica
7. sincronizar grillas -> vuelve la grilla dinámica
8. clase colonia: lista de bacterias random
9. def paso: hija = bacteria dividirse -> for busca donde ubicarla
10 cambiar probabilidades y agregar otras en paso 
-----
AVANCE 3
11. imprimir estados para saber si la grilla visual es igual a las interacciones del codigo
12. la grilla comienza con una bacteria, no con 100
13. reducir el tamaño de la grilla para mayor control
14. eliminar el biofilm como celda, causa confusion
15. una foto x paso
16. agregar metodos de nutrientes
17. Mejorar la leyenda visual: usar colores fijos y explícitos para evitar inconsistencias.
18. Actualizar automáticamente la imagen después de cada paso.

cambiar la resistencia (no MÁS TRUE FALSE)


Relación entre clases:
aplicacion -> crea ambiente (bacteria) 
aplicacion -> crea colonia(ambiente(bacteria))

Proximos pasos:
    - garantizar que los objetos se ejecuten - interaccion
 - contador y ciclo para guardar una imagen por paso
 - convertir a archivo csv
 - graficar 
 - clase simulación
 - diferentes colonias

Según pauta:
Ambiente -> Métodos: actualizar nutrientes(), difundir nutrientes(), aplicar ambiente().
Colonia -> Métodos: paso() LISTO, reporte estado(), exportar csv().
Simulador -> Métodos: run(pasos), graficar crecimiento(), graficar resistencia().
Main -> Inicializa la simulación con parámetros definidos.
